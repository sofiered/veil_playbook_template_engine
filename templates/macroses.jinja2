{% macro maybe_multiline(text) %}
{% if text is string %}
    <p class="multiline-single">{{ text }}</p>
{% elif text is iterable and (text is not string and text is not mapping) %}
    <div class="multiline">
        {% for line in text %}
            <p>{{  line }}</p>
        {% endfor %}
    </div>
{% else %}
    <p>#ERROR#</p>
{% endif %}
{% endmacro %}

{% macro playbook_style(look_items) %}
<div class="look">
    <ul>
    {% for key, value in look_items.items() %}
        <li><div><p class="look-type">{{ key }}:</p> <p class="look-value">{{ value }}</p></div></li>
    {% endfor %}
    </ul>
</div>
{% endmacro %}

{% macro render_states(states_data) %}
    <div class="states-container">
        {% for key, value in states_data.items() %}
            <div class="one-stat">
                <h3 class="stat-title">{{ value }}</h3>
                <div class="stat-cell">
                    <div class="stat-value"></div>
                </div>
                <div class="stat-peak-counter-container">
                    {% for _ in range(5) %}
                        <div class="stat-peak"></div>
                    {% endfor %}
                </div>
            </div>
        {% endfor %}

    </div>
{% endmacro %}

{% macro improve_stats(states_data) %}
    <div class="states-improvement-section">
        {% for key, value in states_data.items() %}
            <div class="item">
                <div class="improvement-mark"></div>
                <p>+1 {{ value }}</p>
            </div>
        {% endfor %}
    </div>
{% endmacro %}

{% macro improve_base(improvements_dict) %}
    <div class="states-improvement-section-column">
        {% for key, value in improvements_dict.items() %}
            <div class="item">
                <p> {{ key }}</p>
                {% for _ in range(value) %}
                    <div class="improvement-mark"></div>
                {% endfor %}
            </div>
        {% endfor %}
    </div>
{% endmacro %}

{% macro improve_after_5(improvements_dict) %}
    <div class="states-improvement-after-5-section">
        {% for key, value in improvements_dict.items() %}
            <div class="item">
                <p> {{ key }}</p>
                {% for _ in range(value) %}
                    <div class="improvement-mark"></div>
                {% endfor %}
            </div>
        {% endfor %}
    </div>
{% endmacro %}

{% macro render_first_page_left_columns_blocks(blocks) %}
{% for left_column_block in blocks %}
    {% if left_column_block['type'] == 'holds' %}
        <div class="first-page-bordered-block">
            {% for hold in left_column_block['values'] %}
                <p>{{ hold }}:</p>
            {% endfor %}
        </div>
    {% else %}
        <p> #ERROR#</p>
    {% endif %}
{% endfor %}
{% endmacro %}

{% macro render_harm(harm_data) %}
<div class="harm-section">
    <p class="title"> {{ harm_data['title'] }}</p>
    {% for line in harm_data['values'] %}
        <div class="harm-line">
         {% for line_item in line %}
             {% if line_item['type'] == 'harm' %}
                 {% for _ in range(line_item['value']) %}
                    <div class="harm-cell"></div>
                 {% endfor %}
                <div class="harm-line-description harm-line-description-justify">{{ line_item['name'] }}</div>
             {% elif line_item['type'] == 'armor' %}
                 {% for _ in range(line_item['value']) %}
                    <div class="armor-cell"></div>
                 {% endfor %}
                <div class="harm-line-description">{{ line_item['name'] }}</div>
             {% else %}
                 <p>#ERROR#</p>
             {% endif %}
         {% endfor %}
        </div>
    {% endfor %}
    {% for index in range(harm_data['empty_strings']) %}
        <p class="empty-string"></p>
    {% endfor %}
</div>
{% endmacro %}